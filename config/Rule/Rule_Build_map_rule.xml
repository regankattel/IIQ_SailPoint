<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Build map rule" type="BuildMap">
  <Description>This rule is used by the delimited file connector to build a map representation of the delimited data.</Description>
  <Signature returnType="Map">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          The application whose data file is being processed.
        </Description>
      </Argument>
      <Argument name="schema">
        <Description>
          The Schema currently in use.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
      <Argument name="record">
        <Description>
          A List of data tokens parsed from the current line of the data file.
        </Description>
      </Argument>
      <Argument name="cols">
        <Description>
          A List of the columns to use.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="map">
        <Description>
          A Map of the resource object assembled from the data.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[import sailpoint.object.Identity;
   import sailpoint.connector.DelimitedFileConnector;

import sailpoint.connector.*;
  Map map = DelimitedFileConnector.defaultBuildMap(cols, record);

String firstname = (String) map.get("First Name");
String lastname = (String) map.get("Last Name");
String name = firstname + "." + lastname;
map.put("name", name);
  System.out.println("New User Name is like "+name);
  ///map.put("id1" , name);
  
  return map;]]></Source>
</Rule>